// <auto-generated />
using System;
using BeestjeOpJeFeestje.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeestjeOpJeFeestje.Migrations
{
    [DbContext(typeof(BeestjeOpJeFeestjeContext))]
    partial class BeestjeOpJeFeestjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Membershiplevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "wwwroot\\img\\Aap.png",
                            Name = "Aap",
                            Price = 50f,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "https://example.com/olifant.jpg",
                            Name = "Olifant",
                            Price = 200f,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "https://example.com/zebra.jpg",
                            Name = "Zebra",
                            Price = 150f,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "https://example.com/leeuw.jpg",
                            Name = "Leeuw",
                            Price = 300f,
                            Type = "Jungle"
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "https://example.com/hond.jpg",
                            Name = "Hond",
                            Price = 30f,
                            Type = "Boerderij"
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "https://example.com/ezel.jpg",
                            Name = "Ezel",
                            Price = 60f,
                            Type = "Boerderij"
                        },
                        new
                        {
                            Id = 7,
                            ImageURL = "https://example.com/koe.jpg",
                            Name = "Koe",
                            Price = 120f,
                            Type = "Boerderij"
                        },
                        new
                        {
                            Id = 8,
                            ImageURL = "https://example.com/eend.jpg",
                            Name = "Eend",
                            Price = 20f,
                            Type = "Boerderij"
                        },
                        new
                        {
                            Id = 9,
                            ImageURL = "https://example.com/kuiken.jpg",
                            Name = "Kuiken",
                            Price = 10f,
                            Type = "Boerderij"
                        },
                        new
                        {
                            Id = 10,
                            ImageURL = "https://example.com/pinguin.jpg",
                            Name = "Pinguïn",
                            Price = 80f,
                            Type = "Sneeuw"
                        },
                        new
                        {
                            Id = 11,
                            ImageURL = "https://example.com/ijsbeer.jpg",
                            Name = "IJsbeer",
                            Price = 250f,
                            Type = "Sneeuw"
                        },
                        new
                        {
                            Id = 12,
                            ImageURL = "https://example.com/zeehond.jpg",
                            Name = "Zeehond",
                            Price = 100f,
                            Type = "Sneeuw"
                        },
                        new
                        {
                            Id = 13,
                            ImageURL = "https://example.com/kameel.jpg",
                            Name = "Kameel",
                            Price = 180f,
                            Type = "Woestijn"
                        },
                        new
                        {
                            Id = 14,
                            ImageURL = "https://example.com/slang.jpg",
                            Name = "Slang",
                            Price = 70f,
                            Type = "Woestijn"
                        },
                        new
                        {
                            Id = 15,
                            ImageURL = "https://example.com/t-rex.jpg",
                            Name = "T-Rex",
                            Price = 1000f,
                            Type = "VIP"
                        },
                        new
                        {
                            Id = 16,
                            ImageURL = "https://example.com/unicorn.jpg",
                            Name = "Unicorn",
                            Price = 1200f,
                            Type = "VIP"
                        });
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Animal", b =>
                {
                    b.HasOne("BeestjeOpJeFeestje.Models.Booking", null)
                        .WithMany("animals")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Booking", b =>
                {
                    b.HasOne("BeestjeOpJeFeestje.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Booking", b =>
                {
                    b.Navigation("animals");
                });
#pragma warning restore 612, 618
        }
    }
}
